// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file api/environment/environment.proto (package environment.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message environment.v1.Empty
 */
export class Empty extends Message<Empty> {
  constructor(data?: PartialMessage<Empty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "environment.v1.Empty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Empty {
    return new Empty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Empty {
    return new Empty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Empty {
    return new Empty().fromJsonString(jsonString, options);
  }

  static equals(a: Empty | PlainMessage<Empty> | undefined, b: Empty | PlainMessage<Empty> | undefined): boolean {
    return proto3.util.equals(Empty, a, b);
  }
}

/**
 * @generated from message environment.v1.GetEnvironmentHealthResponse
 */
export class GetEnvironmentHealthResponse extends Message<GetEnvironmentHealthResponse> {
  /**
   * @generated from field: string docker_status = 1;
   */
  dockerStatus = "";

  constructor(data?: PartialMessage<GetEnvironmentHealthResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "environment.v1.GetEnvironmentHealthResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "docker_status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEnvironmentHealthResponse {
    return new GetEnvironmentHealthResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEnvironmentHealthResponse {
    return new GetEnvironmentHealthResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEnvironmentHealthResponse {
    return new GetEnvironmentHealthResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetEnvironmentHealthResponse | PlainMessage<GetEnvironmentHealthResponse> | undefined, b: GetEnvironmentHealthResponse | PlainMessage<GetEnvironmentHealthResponse> | undefined): boolean {
    return proto3.util.equals(GetEnvironmentHealthResponse, a, b);
  }
}

